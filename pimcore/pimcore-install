*** Docker ***
docker ps 		Alle container die gestartet sind

*** Pimcore lokal installieren / Skeleton clonen von git-hub
=> https://github.com/w-vision/pimcore-skeleton
=> Users/sandrojenny/git/folder
git clone 

*** docker-compose up -d
=> Docker Images (Image => Dockerfile / Server Konfig / Tools )
=> Image für alle Umgebungen ( Dev (Lokal) / Stage (ONLINE) / Production (ONLINE => LIVE) )
=> Images werden global im System angelegt
=> Image Updates (Lokal neu builden)

*** Auf Docker Container mit bash arbeiten
docker-compose exec php bash

*** Mac-Filesystem Berechtigungen vergeben
docker-compose exec php chmod +x /var/www/html/bin/console
=> oder chmod +x /var/www/html/bin/console (Wenn schon eingeloggt)

*** PHP Packaged downloaden und installieren / Berechtigungen vergeben
docker-compose exec php composer install --prefer-dist
=> Bei php Fehler => Order app/config/local/.gitkeep

=> Dependencies updaten
composer update
docker-compose exec php chown -R www-data: /var/www/html


*** Pimcore installieren / Datenbank konfigurieren
docker-compose exec php php vendor/bin/pimcore-install --ignore-existing-config --admin-username admin --admin-password admin --mysql-username pimcore --mysql-database pimcore --mysql-host-socket db --mysql-password pimcore --mysql-port 3306 --no-interaction

*** Docker Service neu staren
exit
docker-compose down
docker-compose up -d

*** homebrew installieren
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

*** JavaScript Pakete installieren mit yarn (aus npm repo)
brew install yarn
yarn install
yarn dev

*** Für Deployer (PHP Script für Deployment / Nicht notwendig)
chmod 600 ./.deployer/id_deployer
